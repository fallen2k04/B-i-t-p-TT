using LibraryEF.Models;
using var context = new LibraryContext();
context.Database.EnsureDeleted();
context.Database.EnsureCreated();

// Seed data
var book1 = new Book { Title = "C# Programming", Author = "Microsoft", PublishedYear = 2022 };
var book2 = new Book { Title = "Database Systems", Author = "Elmasri", PublishedYear = 2020 };
var book3 = new Book { Title = "Entity Framework Core", Author = "Julie Lerman", PublishedYear = 2021 };

var member1 = new Member { Name = "Alice", Email = "alice@example.com", JoinDate = DateTime.Now.AddMonths(-2) };
var member2 = new Member { Name = "Bob", Email = "bob@example.com", JoinDate = DateTime.Now.AddMonths(-1) };

context.Books.AddRange(book1, book2, book3);
context.Members.AddRange(member1, member2);
context.SaveChanges();

// Borrow records
context.Borrows.AddRange(
    new Borrow { Book = book1, Member = member1, BorrowDate = DateTime.Now.AddDays(-10), ReturnDate = null },
    new Borrow { Book = book2, Member = member1, BorrowDate = DateTime.Now.AddDays(-5), ReturnDate = DateTime.Now.AddDays(-1) },
    new Borrow { Book = book3, Member = member2, BorrowDate = DateTime.Now.AddDays(-7), ReturnDate = null }
);
context.SaveChanges();


// 1. In danh s√°ch t·∫•t c·∫£ s√°ch
Console.WriteLine("üìö Danh s√°ch s√°ch:"); foreach (var b in context.Books)
    Console.WriteLine($"- {b.Title} ({b.Author}, {b.PublishedYear})");

Console.WriteLine();

// 2. In danh s√°ch th√†nh vi√™n
Console.WriteLine("üë• Danh s√°ch th√†nh vi√™n:");
foreach (var m in context.Members)
    Console.WriteLine($"- {m.Name} ({m.Email})");

Console.WriteLine();

// 3. In danh s√°ch th√†nh vi√™n + s√°ch h·ªç m∆∞·ª£n
Console.WriteLine("üìñ Th√†nh vi√™n v√† s√°ch ƒë√£ m∆∞·ª£n:");
var membersWithBooks = context.Members
    .Select(m => new {
        m.Name,
        BorrowedBooks = m.Borrows.Select(b => b.Book.Title).ToList()
    }).ToList();

foreach (var m in membersWithBooks)
    Console.WriteLine($"{m.Name} ƒë√£ m∆∞·ª£n: {string.Join(", ", m.BorrowedBooks)}");

Console.WriteLine();

// 4. S√°ch ch∆∞a tr·∫£
Console.WriteLine("‚è≥ S√°ch ƒëang ƒë∆∞·ª£c m∆∞·ª£n (ch∆∞a tr·∫£):");
var borrowedBooks = context.Borrows
    .Where(b => b.ReturnDate == null)
    .Select(b => new { b.Book.Title, Member = b.Member.Name, b.BorrowDate })
    .ToList();

foreach (var b in borrowedBooks)
    Console.WriteLine($"{b.Title} - ƒë∆∞·ª£c m∆∞·ª£n b·ªüi {b.Member} v√†o ng√†y {b.BorrowDate:dd/MM/yyyy}");
